name: Build and Release Android App

on:
  schedule:
    - cron: '0 0 * * *'  # This runs every day at midnight
  push:
    branches:
      - master  # Change this to your default branch if it's different

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # 2. Setup: Set up JDK and Android SDK
      - name: Set up JDK and Android SDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Use the appropriate Java version
          distribution: 'adopt'
      - name: Set up Android SDK
        uses: actions/setup-java@v2
        with:
          java-version: '1.8'  # Android still requires JDK 1.8
          distribution: 'adopt'
      - name: Set up Android Emulator
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Use the appropriate Java version
          distribution: 'adopt'
          cache: gradle

      # 3. Build: Build the Android app
      - name: Build Android App
        run: ./gradlew build

      # 4. Archive: Archive the app outputs
      - name: Archive App Outputs
        run: |
          mkdir -p app-outputs
          cp -r app/build/outputs/* app-outputs/
      
      # 5. Archive: Compress the app outputs into a ZIP file
      - name: Compress App Outputs
        run: zip -r app-outputs.zip app-outputs

      # 6. Artifact: Upload the app-outputs.zip as a GitHub artifact
      - name: Upload App Outputs as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-outputs
          path: app-outputs.zip

      # 7. Release: Create a GitHub release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: Description of the release
          draft: false
          prerelease: false

      # 8. Release: Upload app-outputs.zip as an asset to the GitHub release
      - name: Attach Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-outputs.zip
          asset_name: app-outputs-${{ github.run_number }}.zip  # Adjust the asset name as needed
          asset_content_type: application/zip
